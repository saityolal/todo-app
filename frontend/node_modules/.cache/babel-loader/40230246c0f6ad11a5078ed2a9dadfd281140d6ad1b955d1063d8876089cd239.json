{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sadoy\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Git Repos\\\\todo-app\\\\src\\\\components\\\\Todo\\\\TodoComponent.jsx\";\n/* eslint-disable import/no-anonymous-default-export */\nimport { useParams } from \"react-router-dom\";\nimport { retrieveTodoApi } from \"./api/TodoApiService\";\nimport { useAuth } from \"./security/AuthContext\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const {\n    id\n  } = useParams();\n  const authContext = useAuth();\n  const username = authContext.username;\n  useEffect(() => retrieveTodo(), [id, retrieveTodo]); // [] to run the effect only once when the component mounts\n\n  /*************  âœ¨ Codeium Command ðŸŒŸ  *************/\n  const fetchTodo = async () => {\n    try {\n      const response = await retrieveTodoApi(username, id);\n      setTodo(response.data);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchTodo();\n  }, [id, username]); // [] to run the effect only once when the component mounts\n\n  const todo = {\n    id: 0,\n    description: \"\",\n    done: false,\n    targetDate: new Date()\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", todo.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", todo.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Done?: \", todo.done ? \"Yes\" : \"No\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Target Date: \", todo.targetDate.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n  function retrieveTodo() {\n    retrieveTodoApi(username, id).then(response => console.log(response)).catch(error => console.error(\"Error:\", error));\n  }\n  /******  8b7605a0-5716-4262-baf2-73831ce31b93  *******/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["useParams","retrieveTodoApi","useAuth","useEffect","jsxDEV","_jsxDEV","id","authContext","username","retrieveTodo","fetchTodo","response","setTodo","data","error","console","todo","description","done","targetDate","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","then","log","catch"],"sources":["C:/Users/sadoy/OneDrive/MasaÃ¼stÃ¼/Git Repos/todo-app/src/components/Todo/TodoComponent.jsx"],"sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport { useParams } from \"react-router-dom\";\r\nimport { retrieveTodoApi } from \"./api/TodoApiService\";\r\nimport { useAuth } from \"./security/AuthContext\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function () {\r\n  const { id } = useParams();\r\n  const authContext = useAuth();\r\n  const username = authContext.username;\r\n\r\n  useEffect(() => retrieveTodo(), [id, retrieveTodo]); // [] to run the effect only once when the component mounts\r\n\r\n/*************  âœ¨ Codeium Command ðŸŒŸ  *************/\r\n  const fetchTodo = async () => {\r\n    try {\r\n      const response = await retrieveTodoApi(username, id);\r\n      setTodo(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTodo();\r\n  }, [id, username]); // [] to run the effect only once when the component mounts\r\n\r\n  const todo = {\r\n    id: 0,\r\n    description: \"\",\r\n    done: false,\r\n    targetDate: new Date(),\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Todo Component</h1>\r\n      <div>\r\n        <p>ID: {todo.id}</p>\r\n        <p>Description: {todo.description}</p>\r\n        <p>Done?: {todo.done ? \"Yes\" : \"No\"}</p>\r\n        <p>Target Date: {todo.targetDate.toLocaleString()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  function retrieveTodo() {\r\n    retrieveTodoApi(username, id)\r\n      .then((response) => console.log(response))\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  }\r\n/******  8b7605a0-5716-4262-baf2-73831ce31b93  *******/\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Todo Component</h1>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}