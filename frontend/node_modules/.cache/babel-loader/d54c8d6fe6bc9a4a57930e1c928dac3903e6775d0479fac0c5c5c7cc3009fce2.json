{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sadoy\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Git Repos\\\\todo-app\\\\src\\\\components\\\\Todo\\\\security\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { executeBasicAuthenticationService } from \"../api/TodoApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction AuthProvider({\n  children\n}) {\n  _s2();\n  const [isAuthenticated, setAuthenticated] = useState(false);\n\n  //setInterval(() =>setNumber(number+1), 1000);\n  //const valueToBeShared = { number, isAuthenticated, setAuthenticated };\n\n  const [username, setUsername] = useState(null);\n  // function login(username, password) {\n  //   if (username === \"admin\" && password === \"admin\") {\n  //     setAuthenticated(true);\n  //     setUsername(username);\n  //     return true;\n  //   } else {\n  //     setAuthenticated(false);\n  //     setUsername(null);\n  //     return false;\n  //   }\n  // }\n  async function login(username, password) {\n    const baToken = \"Basic \" + window.btoa(username + \":\" + password);\n    const resposne = await executeBasicAuthenticationService(baToken);\n    try {\n      if (resposne.status === 200) {\n        setAuthenticated(true);\n        setUsername(username);\n        return true;\n      } else {\n        setAuthenticated(false);\n        setUsername(null);\n        return false;\n      }\n    } catch (error) {}\n  }\n  function logout() {\n    setAuthenticated(false);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      username\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"r+hfkL8+aON1x8Go1nUIN28kT5E=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","executeBasicAuthenticationService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setAuthenticated","username","setUsername","login","password","baToken","window","btoa","resposne","status","error","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sadoy/OneDrive/Masaüstü/Git Repos/todo-app/src/components/Todo/security/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport { executeBasicAuthenticationService } from \"../api/TodoApiService\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\nfunction AuthProvider({ children }) {\r\n  const [isAuthenticated, setAuthenticated] = useState(false);\r\n\r\n  //setInterval(() =>setNumber(number+1), 1000);\r\n  //const valueToBeShared = { number, isAuthenticated, setAuthenticated };\r\n\r\n  const [username, setUsername] = useState(null);\r\n  // function login(username, password) {\r\n  //   if (username === \"admin\" && password === \"admin\") {\r\n  //     setAuthenticated(true);\r\n  //     setUsername(username);\r\n  //     return true;\r\n  //   } else {\r\n  //     setAuthenticated(false);\r\n  //     setUsername(null);\r\n  //     return false;\r\n  //   }\r\n  // }\r\n  async function login(username, password) {\r\n    const baToken = \"Basic \" + window.btoa(username + \":\" + password);\r\n\r\n    const resposne = await  executeBasicAuthenticationService(baToken)\r\n      try{\r\n    if (resposne.status === 200) {\r\n      setAuthenticated(true);\r\n      setUsername(username);\r\n      return true;\r\n    } else {\r\n      setAuthenticated(false);\r\n      setUsername(null);\r\n      return false;\r\n    }\r\n  }catch (error) {\r\n    \r\n  }\r\n  }\r\n\r\n  function logout() {\r\n    setAuthenticated(false);\r\n  }\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout, username }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthProvider;\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,iCAAiC,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AACpB,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAClC,MAAM,CAACC,eAAe,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA;;EAEA,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,eAAec,KAAKA,CAACF,QAAQ,EAAEG,QAAQ,EAAE;IACvC,MAAMC,OAAO,GAAG,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACN,QAAQ,GAAG,GAAG,GAAGG,QAAQ,CAAC;IAEjE,MAAMI,QAAQ,GAAG,MAAOlB,iCAAiC,CAACe,OAAO,CAAC;IAChE,IAAG;MACL,IAAIG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3BT,gBAAgB,CAAC,IAAI,CAAC;QACtBE,WAAW,CAACD,QAAQ,CAAC;QACrB,OAAO,IAAI;MACb,CAAC,MAAM;QACLD,gBAAgB,CAAC,KAAK,CAAC;QACvBE,WAAW,CAAC,IAAI,CAAC;QACjB,OAAO,KAAK;MACd;IACF,CAAC,QAAOQ,KAAK,EAAE,CAEf;EACA;EAEA,SAASC,MAAMA,CAAA,EAAG;IAChBX,gBAAgB,CAAC,KAAK,CAAC;EACzB;EACA,oBACER,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEd,eAAe;MAAEI,KAAK;MAAEQ,MAAM;MAAEV;IAAS,CAAE;IAAAJ,QAAA,EACvEA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACnB,GAAA,CA7CQF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA+CrB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}