{"ast":null,"code":"import { apiClient } from \"./apiClient\";\nexport function retrieveUsers() {\n  return apiClient.get(\"http://localhost:8080/users\");\n}\nexport const retrieveAllTodosWithUserNameApi = username => apiClient.get(`/users/${username}/todos`, {\n  headers: {\n    Authorization: \"Basic YWRtaW46YWRtaW4\"\n  }\n});\n/*************  ✨ Codeium Command ⭐  *************/\n/**\r\n * Execute basic authentication service. This function takes a token as a parameter, and\r\n * performs a GET request to the /basicauth endpoint with the provided token in the\r\n * Authorization header. If the authentication is successful, the function returns\r\n * a response with a status of 200. If the authentication fails, the function returns\r\n * a response with a status of 401.\r\n * @param {string} token The token to be used for authentication.\r\n * @returns {Promise<AxiosResponse>} A promise that resolves to the response object.\r\n */\n/******  95b93af0-49c4-4ad6-a3f1-6745231776bc  *******/\nexport const executeBasicAuthenticationService = token => apiClient.get(`/basicauth`, {\n  headers: {\n    Authorization: token\n  }\n});\nexport const deleteTodoApi = (username, id) => apiClient.delete(`/users/${username}/todos/${id}`);\nexport const retrieveTodoApi = (username, id) => apiClient.get(`/users/${username}/todos/${id}`);\nexport const updateTodoApi = (username, id, todo) => apiClient.put(`/users/${username}/todos/${id}`, todo);\nexport const createTodoApi = (username, todo) => apiClient.post(`/users/${username}/todos`, todo);","map":{"version":3,"names":["apiClient","retrieveUsers","get","retrieveAllTodosWithUserNameApi","username","headers","Authorization","executeBasicAuthenticationService","token","deleteTodoApi","id","delete","retrieveTodoApi","updateTodoApi","todo","put","createTodoApi","post"],"sources":["C:/Users/sadoy/OneDrive/Masaüstü/Git Repos/todo-app/src/components/Todo/api/TodoApiService.jsx"],"sourcesContent":["\r\nimport { apiClient } from \"./apiClient\";\r\n\r\n\r\nexport function retrieveUsers() {\r\n  return apiClient.get(\"http://localhost:8080/users\");\r\n}\r\n\r\nexport const retrieveAllTodosWithUserNameApi = (username) =>\r\n  apiClient.get(`/users/${username}/todos`, {\r\n    headers: {\r\n      Authorization: \"Basic YWRtaW46YWRtaW4\",\r\n    },\r\n  });\r\n/*************  ✨ Codeium Command ⭐  *************/\r\n/**\r\n * Execute basic authentication service. This function takes a token as a parameter, and\r\n * performs a GET request to the /basicauth endpoint with the provided token in the\r\n * Authorization header. If the authentication is successful, the function returns\r\n * a response with a status of 200. If the authentication fails, the function returns\r\n * a response with a status of 401.\r\n * @param {string} token The token to be used for authentication.\r\n * @returns {Promise<AxiosResponse>} A promise that resolves to the response object.\r\n */\r\n/******  95b93af0-49c4-4ad6-a3f1-6745231776bc  *******/\r\nexport const executeBasicAuthenticationService = (token) =>\r\n  apiClient.get(`/basicauth`, {\r\n    headers: {\r\n      Authorization: token,\r\n    }\r\n  })\r\n\r\nexport const deleteTodoApi = (username, id) =>\r\n  apiClient.delete(`/users/${username}/todos/${id}`);\r\n\r\nexport const retrieveTodoApi = (username, id) =>\r\n  apiClient.get(`/users/${username}/todos/${id}`);\r\n\r\nexport const updateTodoApi = (username, id, todo) =>\r\n  apiClient.put(`/users/${username}/todos/${id}`, todo);\r\n\r\nexport const createTodoApi = (username, todo) =>\r\n  apiClient.post(`/users/${username}/todos`, todo);\r\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,aAAa;AAGvC,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC9B,OAAOD,SAAS,CAACE,GAAG,CAAC,6BAA6B,CAAC;AACrD;AAEA,OAAO,MAAMC,+BAA+B,GAAIC,QAAQ,IACtDJ,SAAS,CAACE,GAAG,CAAC,UAAUE,QAAQ,QAAQ,EAAE;EACxCC,OAAO,EAAE;IACPC,aAAa,EAAE;EACjB;AACF,CAAC,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iCAAiC,GAAIC,KAAK,IACrDR,SAAS,CAACE,GAAG,CAAC,YAAY,EAAE;EAC1BG,OAAO,EAAE;IACPC,aAAa,EAAEE;EACjB;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMC,aAAa,GAAGA,CAACL,QAAQ,EAAEM,EAAE,KACxCV,SAAS,CAACW,MAAM,CAAC,UAAUP,QAAQ,UAAUM,EAAE,EAAE,CAAC;AAEpD,OAAO,MAAME,eAAe,GAAGA,CAACR,QAAQ,EAAEM,EAAE,KAC1CV,SAAS,CAACE,GAAG,CAAC,UAAUE,QAAQ,UAAUM,EAAE,EAAE,CAAC;AAEjD,OAAO,MAAMG,aAAa,GAAGA,CAACT,QAAQ,EAAEM,EAAE,EAAEI,IAAI,KAC9Cd,SAAS,CAACe,GAAG,CAAC,UAAUX,QAAQ,UAAUM,EAAE,EAAE,EAAEI,IAAI,CAAC;AAEvD,OAAO,MAAME,aAAa,GAAGA,CAACZ,QAAQ,EAAEU,IAAI,KAC1Cd,SAAS,CAACiB,IAAI,CAAC,UAAUb,QAAQ,QAAQ,EAAEU,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}