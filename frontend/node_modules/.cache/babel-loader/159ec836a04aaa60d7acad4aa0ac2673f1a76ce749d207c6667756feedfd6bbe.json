{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sadoy\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Git Repos\\\\todo-app\\\\src\\\\components\\\\Todo\\\\TodoComponent.jsx\";\n/* eslint-disable import/no-anonymous-default-export */\nimport { useParams } from \"react-router-dom\";\nimport { retrieveTodoApi } from \"./api/TodoApiService\";\nimport { useAuth } from \"./security/AuthContext\";\nimport { useEffect, useState } from \"react\";\nimport { Field, Form, Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const {\n    id\n  } = useParams();\n  const authContext = useAuth();\n  const username = authContext.username;\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => retrieveTodo(), [id]); // [] to run the effect only once when the component mounts\n\n  function retrieveTodo() {\n    retrieveTodoApi(username, id).then(response => setDescription(response.data.description)).catch(error => console.error(\"Error:\", error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["useParams","retrieveTodoApi","useAuth","useEffect","useState","Field","Form","Formik","jsxDEV","_jsxDEV","id","authContext","username","description","setDescription","retrieveTodo","then","response","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","props"],"sources":["C:/Users/sadoy/OneDrive/Masaüstü/Git Repos/todo-app/src/components/Todo/TodoComponent.jsx"],"sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport { useParams } from \"react-router-dom\";\r\nimport { retrieveTodoApi } from \"./api/TodoApiService\";\r\nimport { useAuth } from \"./security/AuthContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Field, Form, Formik } from \"formik\";\r\n\r\nexport default function () {\r\n  const { id } = useParams();\r\n  const authContext = useAuth();\r\n  const username = authContext.username;\r\n\r\n  const [description, setDescription] = useState(\"\");\r\n  useEffect(() => retrieveTodo(), [id]); // [] to run the effect only once when the component mounts\r\n\r\n  function retrieveTodo() {\r\n    retrieveTodoApi(username, id)\r\n      .then((response) => setDescription(response.data.description))\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Todo Component</h1>\r\n      <div>\r\n        <Formik>{\r\n          (props) => (\r\n            <Form>\r\n              <fieldset className=\"form-group\">\r\n                <label></label>\r\n                <Field className=\"form-control\"/>\r\n              </fieldset>\r\n            </Form>\r\n          )\r\n        }</Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,YAAY;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAMW,WAAW,GAAGT,OAAO,CAAC,CAAC;EAC7B,MAAMU,QAAQ,GAAGD,WAAW,CAACC,QAAQ;EAErC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClDD,SAAS,CAAC,MAAMY,YAAY,CAAC,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEvC,SAASK,YAAYA,CAAA,EAAG;IACtBd,eAAe,CAACW,QAAQ,EAAEF,EAAE,CAAC,CAC1BM,IAAI,CAAEC,QAAQ,IAAKH,cAAc,CAACG,QAAQ,CAACC,IAAI,CAACL,WAAW,CAAC,CAAC,CAC7DM,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACrD;EACA,oBACEX,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBd,OAAA;MAAAc,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlB,OAAA;MAAAc,QAAA,eACEd,OAAA,CAACF,MAAM;QAAAgB,QAAA,EACJK,KAAK,iBACJnB,OAAA,CAACH,IAAI;UAAAiB,QAAA,eACHd,OAAA;YAAUa,SAAS,EAAC,YAAY;YAAAC,QAAA,gBAC9Bd,OAAA;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC,eACflB,OAAA,CAACJ,KAAK;cAACiB,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}